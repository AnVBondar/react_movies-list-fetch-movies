{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","url","movie","imgUrl","title","description","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","React","memo","addMovie","useState","value","setValue","setMovie","messageError","setMessageError","isLoading","setIsLoading","searchAgain","setSearchAgain","onSubmit","event","preventDefault","setTimeout","query","fetch","then","res","json","catch","Response","Error","response","data","findMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","cn","onChange","currentTarget","disabled","onClick","App","setMovies","newMovie","find","newMoviesList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8663079.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nfunction hasMoviePoster(url: string) {\n  if (url === 'N/A') {\n    return 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }\n\n  return url;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    description,\n    imdbUrl,\n  }: Movie\n  = { ...movie, imgUrl: hasMoviePoster(movie.imgUrl) };\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (mov: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(({ addMovie }) => {\n  const [value, setValue] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [messageError, setMessageError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [searchAgain, setSearchAgain] = useState<boolean>(false);\n  const handleMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setTimeout(() => {\n      getMovie(value)\n        .then((response) => {\n          if ('Error' in response) {\n            setMessageError(true);\n\n            return;\n          }\n\n          const data = response as MovieData;\n          const findMovie: Movie = {\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n            imdbId: data.imdbID,\n          };\n\n          setMovie(findMovie);\n        })\n        .finally(() => setIsLoading(false));\n    }, 500);\n    setSearchAgain(true);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n      setValue('');\n      setMovie(null);\n      setSearchAgain(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': messageError,\n              })}\n              value={value}\n              onChange={event => {\n                setValue(event.currentTarget.value);\n                setMessageError(false);\n              }}\n            />\n          </div>\n          {messageError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!value}\n            >\n              {searchAgain ? 'Seach again' : 'Find a movie'}\n            </button>\n          </div>\n          {movie && !messageError && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && !messageError && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n});\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=dc6bfbd0';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    const newMoviesList = [...movies, newMovie];\n\n    setMovies(newMoviesList);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}